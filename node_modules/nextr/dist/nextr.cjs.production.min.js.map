{"version":3,"file":"nextr.cjs.production.min.js","sources":["../src/utils.ts","../src/Co.ts"],"sourcesContent":["export const isFunction = (fn: any): boolean => typeof fn === 'function';\n","import { isFunction } from './utils';\nimport { Fn } from './types';\n\nconst isCoError = (error: Error) => {\n  return /Co Exception/.test(error.message);\n};\n\nconst buildCoError = (fn: Function, error: Error) => {\n  const message = error.message;\n  const functionName = fn.name || String(fn).slice(0, 10);\n  const coErrorMessage = `[Co Exception ${functionName}]: ${message}`;\n  error.message = coErrorMessage;\n  return error;\n};\n\nclass Runner {\n  public fn: Function;\n  public ancestor: null | Runner;\n  public prevSibling: null | Runner;\n  public nextSibling: null | Runner;\n\n  public onError: undefined | Function;\n  public onSuccess: undefined | Function;\n  public onFinish: undefined | Function;\n\n  constructor({\n    fn,\n    ancestor,\n    onError,\n    onSuccess,\n    onFinish,\n  }: {\n    fn: Function;\n    ancestor: null | Runner;\n    onError?: Function;\n    onSuccess?: Function;\n    onFinish?: Function;\n  }) {\n    this.prevSibling = null;\n    this.nextSibling = null;\n    this.fn = fn;\n    this.ancestor = ancestor;\n\n    this.onError = onError;\n    this.onSuccess = onSuccess;\n    this.onFinish = onFinish;\n  }\n\n  run(options: any[]): void {\n    const len = this.fn.length;\n    let args = options.concat({\n      abort: () => {\n        if (isFunction(this.onError)) (this.onError as Function)();\n        if (isFunction(this.onFinish)) (this.onFinish as Function)();\n      },\n      back: () => {\n        if (this.prevSibling) this.prevSibling.run(options);\n      },\n      resume: () => {\n        if (this.prevSibling) this.prevSibling.upstream(options);\n      },\n      next: () => {\n        if (this.nextSibling) {\n          this.nextSibling.run(options);\n          return;\n        }\n\n        if (isFunction(this.onSuccess)) (this.onSuccess as Function)();\n        if (isFunction(this.onFinish)) (this.onFinish as Function)();\n      },\n    });\n\n    // If runner is in the middle, the last one should be `actions`,\n    // so args is truncate from end..\n    if (this.nextSibling) {\n      args = args.slice(-len);\n    } else {\n      // if len is 1, arg will be context value.\n      if (len === 1) args = args.slice(-2, -1);\n    }\n\n    try {\n      this.fn.apply(this, args);\n    } catch (err) {\n      // console.log('err ', isCoError(err as Error), err)\n      if (isCoError(err as Error)) {\n        throw err;\n      }\n      throw buildCoError(this.fn, err as Error);\n    }\n  }\n\n  setPrevSibling(runner: Runner) {\n    this.prevSibling = runner;\n  }\n\n  setNextSibling(runner: Runner) {\n    this.nextSibling = runner;\n  }\n\n  upstream(options: any[]): void {\n    if (this.prevSibling) this.prevSibling.upstream(options);\n    else this.run(options);\n  }\n}\n\nclass Co {\n  public current: null | Runner;\n  public ancestor: null | Runner;\n  public ctx: object | Function;\n\n  constructor(options?: { ctx: object }) {\n    this.current = null;\n    this.ancestor = null;\n    this.ctx = options ? options.ctx : {};\n  }\n\n  useFn(fn: Function, ancestor: null | Runner) {\n    const runner = new Runner({ fn, ancestor });\n    if (!this.ancestor) {\n      this.ancestor = runner;\n    }\n\n    if (this.current) {\n      this.current.setNextSibling(runner);\n      runner.setPrevSibling(this.current);\n    }\n\n    this.current = runner;\n  }\n\n  // private useOne<T1>(\n  //   fn: (arg1: T1, ctx: object, actions: actions) => void\n  // ): void;\n  // private useOne<T1, T2>(\n  //   fn: (arg1: T1, arg2: T2, ctx: object, actions: actions) => void\n  // ): void;\n  // private useOne<T1, T2, T3>(\n  //   fn: (arg1: T1, arg2: T2, arg3: T3, ctx: object, actions: actions) => void\n  // ): void;\n  // private useOne<T1, T2, T3, T4>(\n  //   fn: (\n  //     arg1: T1,\n  //     arg2: T2,\n  //     arg3: T3,\n  //     arg4: T4,\n  //     ctx: object,\n  //     actions: actions\n  //   ) => void\n  // ): void;\n  /**\n   *\n   * @param fn copy middleware function if fn is a co object.\n   */\n  private useOne(fn: Fn | Co): void {\n    if (fn instanceof Co) {\n      let runner = fn.ancestor;\n      while (runner) {\n        this.useFn(runner.fn, this.ancestor);\n        runner = runner.nextSibling;\n      }\n    } else if (typeof fn === 'function') {\n      this.useFn(fn, this.ancestor);\n    }\n  }\n\n  /**\n   *\n   * @param args could be array of function or Co object. When arg is a Co object,\n   * its middleware functions will be copied to new Co object.\n   */\n  public use(...args: (Fn | Co)[]): Co {\n    args.forEach(fn => this.useOne(fn));\n    return this;\n  }\n\n  public start(...args: any[]): object {\n    let contextArg = this.ctx;\n    if (typeof contextArg === 'function')\n      contextArg = (this.ctx as Function).call(null);\n\n    if (this.ancestor) this.ancestor.run(args.concat(contextArg));\n    return contextArg;\n  }\n}\n\nexport default Co;\n"],"names":["isFunction","fn","Runner","ancestor","onError","onSuccess","onFinish","prevSibling","nextSibling","run","options","len","this","length","args","concat","abort","_this","back","resume","upstream","next","slice","apply","err","test","message","error","functionName","name","String","buildCoError","setPrevSibling","runner","setNextSibling","current","ctx","useFn","useOne","Co","use","forEach","_this2","start","contextArg","call"],"mappings":"oEAAO,IAAMA,EAAa,SAACC,SAAmC,mBAAPA,GCejDC,+BAWFD,IAAAA,GACAE,IAAAA,SACAC,IAAAA,QACAC,IAAAA,UACAC,IAAAA,cAQKC,YAAc,UACdC,YAAc,UACdP,GAAKA,OACLE,SAAWA,OAEXC,QAAUA,OACVC,UAAYA,OACZC,SAAWA,6BAGlBG,IAAA,SAAIC,cACIC,EAAMC,KAAKX,GAAGY,OAChBC,EAAOJ,EAAQK,OAAO,CACxBC,MAAO,WACDhB,EAAWiB,EAAKb,UAAWa,EAAKb,UAChCJ,EAAWiB,EAAKX,WAAYW,EAAKX,YAEvCY,KAAM,WACAD,EAAKV,aAAaU,EAAKV,YAAYE,IAAIC,IAE7CS,OAAQ,WACFF,EAAKV,aAAaU,EAAKV,YAAYa,SAASV,IAElDW,KAAM,WACAJ,EAAKT,YACPS,EAAKT,YAAYC,IAAIC,IAInBV,EAAWiB,EAAKZ,YAAaY,EAAKZ,YAClCL,EAAWiB,EAAKX,WAAYW,EAAKX,eAMrCM,KAAKJ,YACPM,EAAOA,EAAKQ,OAAOX,GAGP,IAARA,IAAWG,EAAOA,EAAKQ,OAAO,GAAI,aAIjCrB,GAAGsB,MAAMX,KAAME,GACpB,MAAOU,MA/EJ,eAAeC,KAiFJD,EAjFeE,eAkFrBF,QA/EO,SAACvB,EAAc0B,OAC5BD,EAAUC,EAAMD,QAChBE,EAAe3B,EAAG4B,MAAQC,OAAO7B,GAAIqB,MAAM,EAAG,WAEpDK,EAAMD,yBADkCE,QAAkBF,EAEnDC,EA4EGI,CAAanB,KAAKX,GAAIuB,OAIhCQ,eAAA,SAAeC,QACR1B,YAAc0B,KAGrBC,eAAA,SAAeD,QACRzB,YAAcyB,KAGrBb,SAAA,SAASV,GACHE,KAAKL,YAAaK,KAAKL,YAAYa,SAASV,GAC3CE,KAAKH,IAAIC,0CASJA,QACLyB,QAAU,UACVhC,SAAW,UACXiC,IAAM1B,EAAUA,EAAQ0B,IAAM,8BAGrCC,MAAA,SAAMpC,EAAcE,OACZ8B,EAAS,IAAI/B,EAAO,CAAED,GAAAA,EAAIE,SAAAA,IAC3BS,KAAKT,gBACHA,SAAW8B,GAGdrB,KAAKuB,eACFA,QAAQD,eAAeD,GAC5BA,EAAOD,eAAepB,KAAKuB,eAGxBA,QAAUF,KA0BTK,OAAA,SAAOrC,MACTA,aAAcsC,UACZN,EAAShC,EAAGE,SACT8B,QACAI,MAAMJ,EAAOhC,GAAIW,KAAKT,UAC3B8B,EAASA,EAAOzB,gBAEK,mBAAPP,QACXoC,MAAMpC,EAAIW,KAAKT,aASjBqC,IAAA,6CAAO1B,2BAAAA,yBACZA,EAAK2B,SAAQ,SAAAxC,UAAMyC,EAAKJ,OAAOrC,MACxBW,QAGF+B,MAAA,eACDC,EAAahC,KAAKwB,IACI,mBAAfQ,IACTA,EAAchC,KAAKwB,IAAiBS,KAAK,kCAH7B/B,2BAAAA,yBAKVF,KAAKT,UAAUS,KAAKT,SAASM,IAAIK,EAAKC,OAAO6B,IAC1CA"}